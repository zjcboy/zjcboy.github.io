{"meta":{"title":"JCBoy Blog","subtitle":"JCBoy Blog","description":"专注WEB开发","author":"Junchao Zheng","url":"http://zjcboy.com"},"pages":[],"posts":[{"title":"基于ionic2实现地理定位示范","slug":"ionic2-geolocation","date":"2016-10-12T12:54:37.000Z","updated":"2017-01-08T12:57:58.000Z","comments":true,"path":"2016/10/12/ionic2-geolocation/","link":"","permalink":"http://zjcboy.com/2016/10/12/ionic2-geolocation/","excerpt":"前言本文内容，主要关于如何在ionic2中实现地理定位功能，相信有不少的业务需要用到。此方法通过获取经纬度，并通过高德地理/逆地理编码API获取详细的位置信息。所以请先前往(高德开发平台)[http://lbs.amap.com/dev/]注册账号，新建应用后，添加新KEY，并绑定为Web服务API。 tips:百度地图也有开放类似的API，也可采用。","text":"前言本文内容，主要关于如何在ionic2中实现地理定位功能，相信有不少的业务需要用到。此方法通过获取经纬度，并通过高德地理/逆地理编码API获取详细的位置信息。所以请先前往(高德开发平台)[http://lbs.amap.com/dev/]注册账号，新建应用后，添加新KEY，并绑定为Web服务API。 tips:百度地图也有开放类似的API，也可采用。 步骤安装插件1ionic plugin add cordova-plugin-geolocation 获取经纬度1234567891011import &#123; Geolocation &#125; from &apos;ionic-native&apos;;import &#123;locationService&#125; from &apos;locationService&apos;;Geolocation.getCurrentPosition().then((resp) =&gt; &#123; // resp.coords.latitude 纬度 // resp.coords.longitude 精度 this.locationService.trans(resp.coords.latitude,resp.coords.longitude).subscribe((res) = &#123; console.log(res.regeocode.addressComponent.province + &apos; &apos; + res.regeocode.addressComponent.city + &apos; &apos; + res.regeocode.addressComponent.district); &#125;)&#125;).catch((error) =&gt; &#123; console.log(&apos;Error getting location&apos;, error);&#125;); 通过API获取地理位置信息12345678910111213import &#123;Http&#125; from &apos;@angular/http&apos;;@Injectable()export class locationService &#123; constructor(private http: Http, public nav: NavController, public events: Events) &#123; this.http = http; &#125; trans(longitude, latitude) &#123; let url = &apos;http://restapi.amap.com/v3/geocode/regeo?output=json&amp;location=&apos; + longitude + &apos;,&apos; + latitude + &apos;&amp;key=&lt;用户的key&gt;&amp;radius=1000&amp;extensions=base&apos;; return this.http.get(url).map( res =&gt; res.json() ); &#125;&#125; 欢迎大家加入Ionic2.0 交流群 513752928","categories":[],"tags":[{"name":"IONIC2","slug":"IONIC2","permalink":"http://zjcboy.com/tags/IONIC2/"}]},{"title":"基于IONIC2极光推送示例","slug":"ionic2-jpush-demo","date":"2016-10-09T12:36:03.000Z","updated":"2017-01-08T12:55:25.000Z","comments":true,"path":"2016/10/09/ionic2-jpush-demo/","link":"","permalink":"http://zjcboy.com/2016/10/09/ionic2-jpush-demo/","excerpt":"前言由于ionic2在使用cordova插件的方法不同于之前， 所以在ionic-native开源项目集成了JPush调用方法，其实实现方式有很多种。 实际上ionic-natvie只是中间层，可以理解为ionic2与cordova的一个桥梁。 具体大家可以查看ionic-natvie，文档内有关于插件集成的方法。 由于工作比较繁忙，暂时只实现了公共API部分。 项目地址&gt;&gt;","text":"前言由于ionic2在使用cordova插件的方法不同于之前， 所以在ionic-native开源项目集成了JPush调用方法，其实实现方式有很多种。 实际上ionic-natvie只是中间层，可以理解为ionic2与cordova的一个桥梁。 具体大家可以查看ionic-natvie，文档内有关于插件集成的方法。 由于工作比较繁忙，暂时只实现了公共API部分。 项目地址&gt;&gt; 集成步骤通过 Cordova Plugins 安装，要求 Cordova CLI 5.0+：1$ cordova plugin add jpush-phonegap-plugin --variable API_KEY=your_jpush_appkey 或者直接通过 url 安装：1$ cordova plugin add https://github.com/jpush/jpush-phonegap-plugin.git --variable API_KEY=your_jpush_appkey 或下载到本地安装： $ cordova plugin add Your_Plugin_Path –variable API_KEY=your_jpush_appkey12345678查看更多: [官方文档](https://github.com/jpush/jpush-phonegap-plugin)### 使用（仅列举常用部分，其他方法请查看文档）请先把demo里的node-module/ionic-native文件夹复制到自己的项目里面去。引入JPush import { JPush } from ‘ionic-native’;12初始化 JPush.init().then(res =&gt; { alert(res) });12停止 JPush.stop().then(res =&gt; { alert(res) });12设置别名 JPush.setAlias(alias).then(res =&gt; { alert(res) });12设置标签 12同时设置别名和标签 JPush.setTagsWithAlias(alias,alias).then(res =&gt; { alert(res) });12获取注册ID JPush.getRegistrationID().then(res =&gt; { alert(res) });12获取点击通知的内容 document.addEventListener(“jpush.openNotification”, (event?: any) =&gt; { alert(event.alert)}, false);12获取自定义消息 document.addEventListener(“jpush.receiveMessage”, (event?: any) =&gt; { alert(event.message)}, false);``` ##欢迎大家加入Ionic2.0 交流群 513752928","categories":[],"tags":[{"name":"IONIC2","slug":"IONIC2","permalink":"http://zjcboy.com/tags/IONIC2/"}]}]}